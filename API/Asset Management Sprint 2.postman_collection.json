{
	"info": {
		"_postman_id": "8b766e38-ac90-4503-9308-9cc76227caca",
		"name": "Asset Management Sprint 2",
		"description": "# **DESCRIPTION**\n\nThis is API for sprint 2:\n\n- From previous sprints\n    - Login Account\n    - Manage User\n- Manage asset:\n    - Get asset list\n    - Get asset by asset code\n    - Create asset\n    - Update asset\n    - Delete asset\n    - Create Category",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "24522066"
	},
	"item": [
		{
			"name": "Manage user",
			"item": [
				{
					"name": "Create user",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"firstName\": \"Vang\",\r\n    \"lastName\": \"Do Van\",\r\n    \"dob\": \"2022-11-18\",\r\n    \"joinedDate\": \"2022-11-18\",\r\n    \"gender\": \"FEMALE\",\r\n    \"type\": \"ADMIN\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8080/v1/users",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"v1",
								"users"
							]
						},
						"description": "# NOTE\n\n**Only ADMIN is allowed.**\n\n**Required user to login** to create user.\n\nGet token by logging into system and put it in **Authorization** header"
					},
					"response": []
				},
				{
					"name": "Get user by username",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:8080/v1/users/:username",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"v1",
								"users",
								":username"
							],
							"variable": [
								{
									"key": "username",
									"value": "vangdv"
								}
							]
						},
						"description": "# **NOTE**\n\n**Only ADMIN is allowed.**\n\n**Required user to login** to get user by username.\n\nGet token by logging into system and put it in **Authorization** header"
					},
					"response": []
				},
				{
					"name": "Get list of users with given filter",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:8080/v1/users?page=&search=&type=&sort=",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"v1",
								"users"
							],
							"query": [
								{
									"key": "page",
									"value": "",
									"description": "0"
								},
								{
									"key": "search",
									"value": "",
									"description": "SD0001"
								},
								{
									"key": "type",
									"value": "",
									"description": "ADMIN"
								},
								{
									"key": "sort",
									"value": "",
									"description": "staffCode,asc"
								},
								{
									"key": "sort",
									"value": null,
									"description": "joinedDate,desc",
									"disabled": true
								}
							]
						},
						"description": "# **NOTE**\n\n**Only ADMIN is allowed.**\n\n**Required user to login** to view user list.\n\nGet token by logging into system and put it in **Authorization** header\n\n---\n\n# DESCRIPTION\n\nGet list of users with given filters:\n\n- page: page index\n- search: keywords that matches staffCode or name\n- type: filter by user type (ADMIN or STAFF or leave it blank)\n- sort: all column titles by ascending/descending. We can sort multiple field using multiple sort parameters."
					},
					"response": []
				},
				{
					"name": "Update user",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"firstName\": \"Vang\",\r\n  \"lastName\": \"Do\",\r\n  \"dob\": \"2022-11-17\",\r\n  \"joinedDate\": \"2022-11-17\",\r\n  \"gender\": \"MALE\",\r\n  \"type\": \"STAFF\",\r\n  \"staffCode\": \"SD0009\",\r\n  \"status\": true,\r\n  \"location\": {\r\n      \"id\": \"HN\",\r\n      \"name\": \"Hanoi\"\r\n  },\r\n  \"createdBy\": \"vangdo\",\r\n  \"createdDate\": \"2022-11-23T20:12:23.966\"\r\n}\r\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8080/v1/users/:username",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"v1",
								"users",
								":username"
							],
							"variable": [
								{
									"key": "username",
									"value": "vangdv"
								}
							]
						},
						"description": "# **NOTE**\n\n**Only ADMIN is allowed.**\n\n**Required user to login** to update user.\n\nGet token by logging into system and put it in **Authorization** header"
					},
					"response": []
				},
				{
					"name": "Disable user",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"url": {
							"raw": "http://localhost:8080/v1/users/:username/disable",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"v1",
								"users",
								":username",
								"disable"
							],
							"variable": [
								{
									"key": "username",
									"value": "tungnc"
								}
							]
						},
						"description": "# **Note**\n\n**Only ADMIN is allowed.**\n\n**Required user to login** to disable user.\n\nGet token by logging into system and put it in **Authorization** header"
					},
					"response": []
				},
				{
					"name": "Change user's password",
					"request": {
						"method": "POST",
						"header": [],
						"url": {
							"raw": "http://localhost:8080/v1/users/password?password=12345678",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"v1",
								"users",
								"password"
							],
							"query": [
								{
									"key": "password",
									"value": "12345678"
								},
								{
									"key": "oldPassword",
									"value": "87654321",
									"disabled": true
								}
							]
						},
						"description": "# **NOTE**\n\nRequired user login to change password.\n\nGet token by logging into system and put it in **Authorization** header\n\n---\n\n# DESCRIPTION\n\nWe can use this API to change password for the first time login and change password normally.\n\n- For the first time login: user is only required to input new password (\"**password**\" param)\n- For the normal change password: user is required to input both the old password and the new one.  \n    (\"**password**\" and \"**oldPassword**\" params)\n    \n\n###### (BE will get the current username after login then we don't need to parse username into path variable.)"
					},
					"response": []
				}
			]
		},
		{
			"name": "Log in/out",
			"item": [
				{
					"name": "Logs user into the system",
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"username\": \"vangdo\",\r\n    \"password\": \"12345678\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8080/v1/auth/login",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"v1",
								"auth",
								"login"
							]
						},
						"description": "# DESCRIPTION\n\nUser can get bearer token to get access to other API.\n\n---\n\nReturn object includes:\n\n- \"token\"\n- \"refreshToken\"\n- \"type\": \"Bearer\"\n- \"username\"\n- \"role\": \"ADMIN\"\n- \"isFirstTimeLogin\": false"
					},
					"response": []
				},
				{
					"name": "Get refresh token when token is expired",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"refreshToken\": \"7569e94a-3328-4c22-a57c-1586e2823c53\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8080/v1/auth/refreshToken",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"v1",
								"auth",
								"refreshToken"
							]
						},
						"description": "# **NOTE**\n\nRequired user token is expired to get refresh token.\n\n---\n\nReturn object:\n\n- \"accessToken\": \"\",\n- \"refreshToken\": \"\",\n- \"tokenType\": \"Bearer\""
					},
					"response": []
				}
			]
		},
		{
			"name": "Manage asset",
			"item": [
				{
					"name": "Get list of assets with given filter",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:8080/v1/assets?page=0&search=&category=&sort=&state=",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"v1",
								"assets"
							],
							"query": [
								{
									"key": "page",
									"value": "0",
									"description": "0"
								},
								{
									"key": "search",
									"value": "",
									"description": "LA000001"
								},
								{
									"key": "category",
									"value": "",
									"description": "Laptop"
								},
								{
									"key": "sort",
									"value": "",
									"description": "code,asc"
								},
								{
									"key": "sort",
									"value": "",
									"description": "name,desc",
									"disabled": true
								},
								{
									"key": "sort",
									"value": "",
									"description": "category,asc",
									"disabled": true
								},
								{
									"key": "sort",
									"value": "",
									"description": "state,desc",
									"disabled": true
								},
								{
									"key": "state",
									"value": "",
									"description": "Not Available"
								}
							]
						},
						"description": "# **NOTE**\n\n**Only ADMIN is allowed**\n\n**Required user to login** to view asset list.\n\nGet token by logging into system and put it in **Authorization** header\n\n---\n\n# DESCRIPTION\n\nGet list of users with given filters:\n\n- **page**: page index\n- **search**: keywords that matches assetCode or name\n- **category**: filter by category\n- **state**: filter by 5 states - Available, Not Available, Assigned, Waiting for recycling, Recycled\n- **sort**: all column titles by ascending/descending. We can sort multiple field using multiple sort parameters."
					},
					"response": []
				},
				{
					"name": "Get all categories",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:8080/v1/categories",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"v1",
								"categories"
							]
						},
						"description": "# **NOTE**\n\n**Only ADMIN is allowed**\n\n**Required user to login** to view category list.\n\nGet token by logging into system and put it in **Authorization** header"
					},
					"response": []
				},
				{
					"name": "Get asset by code",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:8080/v1/assets/:code",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"v1",
								"assets",
								":code"
							],
							"variable": [
								{
									"key": "code",
									"value": "MO000001"
								}
							]
						},
						"description": "# **NOTE**\n\n**Only ADMIN is allowed**\n\n**Required user to login** to get asset by its code.\n\nGet token by logging into system and put it in **Authorization** header"
					},
					"response": []
				},
				{
					"name": "Create asset",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"name\": \"Personal Computer\",\r\n    \"category\": {\r\n      \"id\": \"LA\",\r\n      \"name\": \"Laptop\"\r\n    },\r\n    \"specification\": \"Core i5, 8GB RAM, 750 GB HDD, Window 8\",\r\n    \"installedDate\": \"2022-11-28\",\r\n    \"state\": \"Available\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8080/v1/assets",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"v1",
								"assets"
							]
						},
						"description": "# NOTE\n\n**Required user to login** to create user.\n\nGet token by logging into system and put it in **Authorization** header"
					},
					"response": []
				},
				{
					"name": "Create category",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"name\": \"Keyboard1\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8080/v1/categories",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"v1",
								"categories"
							]
						},
						"description": "# NOTE\n\n**Only ADMIN is allowed**\n\n**Required user to login** to create category.\n\nGet token by logging into system and put it in **Authorization** header"
					},
					"response": []
				},
				{
					"name": "Update asset",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"category\": {\r\n        \"id\": \"LA\",\r\n        \"name\": \"Laptop\"\r\n    },\r\n    \"name\": \"Personal Computer\",\r\n    \"specification\": \"Core i5, 16GB RAM, 750GB HDD, Window 8\",\r\n    \"installedDate\": \"2022-11-28\",\r\n    \"state\": \"Available\",\r\n    \"location\": {\r\n        \"id\": \"HN\",\r\n        \"name\": \"Hanoi\"\r\n    },\r\n    \"createdBy\": \"vangdo\",\r\n    \"createdDate\": \"2022-11-28T20:12:23.966\"\r\n}\r\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8080/v1/assets/:code",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"v1",
								"assets",
								":code"
							],
							"variable": [
								{
									"key": "code",
									"value": null
								}
							]
						},
						"description": "# **NOTE**\n\n**Only ADMIN is allowed.**\n\n**Required user to login** to update asset.\n\nGet token by logging into system and put it in **Authorization** header"
					},
					"response": []
				},
				{
					"name": "Delete asset",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "http://localhost:8080/v1/assets/:code",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"v1",
								"assets",
								":code"
							],
							"variable": [
								{
									"key": "code",
									"value": null
								}
							]
						},
						"description": "# **Note**\n\n**Only ADMIN is allowed.**\n\n**Required user to login** to delete asset.\n\nGet token by logging into system and put it in **Authorization** header"
					},
					"response": []
				}
			]
		}
	]
}